 # This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package build, Docker image publish, Docker inmage check

on:
  push:
    branches:
    - main

jobs:
  maven:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        cache: 'maven'

        
    - name: Check Java Version
      run: java -version
      
    - name: Build with Maven
      run: mvn package

    #- name: Publish to GitHub Packages Apache Maven
     # run: mvn deploy 
      #env:
       # GITHUB_TOKEN: ${{ github.token }}
        
    - name: Upload artifacts for Docker job
      uses: actions/upload-artifact@v3
      with:
        name: java-app
        path: '${{ github.workspace }}/target/*.jar'

  docker:

    runs-on: ubuntu-latest
    needs: maven
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Download artifacts from Maven jon
      uses: actions/download-artifact@v3
      with:
        name: java-app
      
    - name: Logging into Docker
      run: docker login ghcr.io -u markgruberf -p ${{ github.token }}
      
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ghcr.io/markgruberf/cubix/1/homework/app:springboot

    - name: Push Docker image to the registry
      run: docker push ghcr.io/markgruberf/cubix/1/homework/app:springboot
          
          
          
  docker-verify:

    runs-on: ubuntu-latest
    needs: docker
    
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
      
    - name: verify Docker
      run: ./verify-image.sh
      
         
          